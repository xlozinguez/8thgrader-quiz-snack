name: CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run linting (if configured)
      run: npm run lint --if-present
      continue-on-error: true
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
        
    - name: Build for Expo
      run: npx expo export --platform web
      continue-on-error: true

  expo-compatibility:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Check Expo compatibility
      run: |
        npx expo install --fix --dry-run
        echo "✅ Expo package compatibility check passed"
        
    - name: Validate package.json
      run: |
        node -e "
          const pkg = require('./package.json');
          console.log('📦 Package name:', pkg.name);
          console.log('📱 Expo SDK:', pkg.dependencies.expo);
          console.log('⚛️ React version:', pkg.dependencies.react);
          console.log('📚 Total dependencies:', Object.keys(pkg.dependencies).length);
          console.log('🧪 Total dev dependencies:', Object.keys(pkg.devDependencies || {}).length);
          console.log('✅ Package.json validation passed');
        "
        
  data-integrity:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Validate flashcard data
      run: |
        node -e "
          const { flashcardsData } = require('./data/flashcards.js');
          
          // Count total cards
          let totalCards = 0;
          let totalUnits = 0;
          
          Object.entries(flashcardsData).forEach(([subject, data]) => {
            console.log(\`📚 \${data.name}: \${data.units.length} units\`);
            totalUnits += data.units.length;
            
            const subjectCards = data.units.reduce((sum, unit) => sum + unit.cards.length, 0);
            totalCards += subjectCards;
            console.log(\`   📋 \${subjectCards} cards total\`);
            
            // Validate structure
            data.units.forEach(unit => {
              if (!unit.cards || unit.cards.length === 0) {
                throw new Error(\`Unit \${unit.name} has no cards\`);
              }
              unit.cards.forEach(card => {
                if (!card.question || !card.answer) {
                  throw new Error(\`Invalid card in unit \${unit.name}\`);
                }
              });
            });
          });
          
          console.log(\`\n🎯 Summary:\`);
          console.log(\`   📚 Total subjects: \${Object.keys(flashcardsData).length}\`);
          console.log(\`   📖 Total units: \${totalUnits}\`);
          console.log(\`   📋 Total cards: \${totalCards}\`);
          console.log(\`✅ Data integrity check passed\`);
        "

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for sensitive files
      run: |
        echo "🔍 Checking for sensitive files..."
        if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.env" | grep -v node_modules | head -5; then
          echo "⚠️ Found potential sensitive files"
        else
          echo "✅ No sensitive files found"
        fi